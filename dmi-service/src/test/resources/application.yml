# ============LICENSE_START=======================================================
# Copyright (C) 2021-2025 OpenInfra Foundation Europe. All rights reserved.
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# ============LICENSE_END=========================================================

rest:
  api:
    dmi-base-path: /dmi

security:
  permit-uri: /actuator/**,/swagger-ui/**,/swagger-resources/**,/v3/api-docs
  auth:
    username: cpsuser
    password: cpsr0cks!

sdnc:
  baseUrl: http://test
  topologyId: test-topology
  auth:
    username: test
    password: test

cps-core:
  baseUrl: some url for cps
  dmiRegistrationUrl: some registration url
  dataSyncEnabledUrl: some data sync url/{some-cm-handle}?dataSyncFlag=true
  auth:
    username: some cps core user
    password: some cps core password

dmi:
  service:
    url: some url for the dmi service
  avc:
    subscription-topic: ncmp-dmi-cm-avc-subscription
    subscription-response-topic: dmi-ncmp-cm-avc-subscription

spring:
  application:
    name: ncmp-dmi-plugin
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER}
    security:
      protocol: PLAINTEXT
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.cloudevents.kafka.CloudEventSerializer
      client-id: ncmp-dmi-plugin
    consumer:
      group-id: ${NCMP_CONSUMER_GROUP_ID:ncmp-group}
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: io.cloudevents.kafka.CloudEventDeserializer
        spring.json.use.type.headers: false

app:
  ncmp:
    async:
      topic: ${NCMP_ASYNC_M2M_TOPIC:ncmp-async-m2m}
  dmi:
    ves:
      topicNames:
        - "unauthenticated.VES_PNFREG_OUTPUT"
        - "unauthenticated.VES_O1_NOTIFY_PNF_REGISTRATION_OUTPUT"

logging:
  format: json
