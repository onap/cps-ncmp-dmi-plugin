{
  "comments": [
    {
      "key": {
        "uuid": "d79bc885_a0ebf60c",
        "filename": "docs/openapi/components.yml",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 7680
      },
      "writtenOn": "2021-08-23T16:38:46Z",
      "side": 1,
      "message": "It is being used by two http methods\n- PUT -\u003e for read\n- POST -\u003e for write\n\nDo we expect \u0027read\u0027 and \u0027create\u0027 operation to be supported by both PUT and POST?",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 21
      },
      "revId": "b6c72bda01899986abe78cb537226e3c22a233f1",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fd82e35_b880c6ae",
        "filename": "docs/openapi/components.yml",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 6841
      },
      "writtenOn": "2021-08-24T08:26:13Z",
      "side": 1,
      "message": "yes, write can be done using post, put , patch and delete.",
      "parentUuid": "d79bc885_a0ebf60c",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 21
      },
      "revId": "b6c72bda01899986abe78cb537226e3c22a233f1",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08edcaa1_a7aed025",
        "filename": "docs/openapi/components.yml",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 5006
      },
      "writtenOn": "2021-08-24T08:40:19Z",
      "side": 1,
      "message": "put can support read, update\npost can support read, create\npatch -\u003e update\ndelete -\u003e delete\n\nso rather than writing operation object for each method , i think its better to combine them and throw error in controller if any ops disjunction appear there.",
      "parentUuid": "5fd82e35_b880c6ae",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 21
      },
      "revId": "b6c72bda01899986abe78cb537226e3c22a233f1",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0ed83a3_c0ba0589",
        "filename": "docs/openapi/components.yml",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 5006
      },
      "writtenOn": "2021-08-23T16:04:22Z",
      "side": 1,
      "message": "in ncmp 201 returns void, but here it returns string which is valid but out-sync with ncmp. need to discuss it after code freeze. please put this pointer in dmi backlog jira.",
      "range": {
        "startLine": 120,
        "startChar": 11,
        "endLine": 120,
        "endChar": 24
      },
      "revId": "b6c72bda01899986abe78cb537226e3c22a233f1",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c8f8132_c2b2d1d3",
        "filename": "docs/openapi/components.yml",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 6841
      },
      "writtenOn": "2021-08-24T08:26:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a0ed83a3_c0ba0589",
      "range": {
        "startLine": 120,
        "startChar": 11,
        "endLine": 120,
        "endChar": 24
      },
      "revId": "b6c72bda01899986abe78cb537226e3c22a233f1",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2616b8c_6ba32384",
        "filename": "docs/openapi/openapi.yml",
        "patchSetId": 4
      },
      "lineNbr": 193,
      "author": {
        "id": 7680
      },
      "writtenOn": "2021-08-23T16:38:46Z",
      "side": 1,
      "message": "why we decided to use same request for both put (read) and post (write)?",
      "range": {
        "startLine": 193,
        "startChar": 56,
        "endLine": 193,
        "endChar": 73
      },
      "revId": "b6c72bda01899986abe78cb537226e3c22a233f1",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b19f9b5_93869f47",
        "filename": "docs/openapi/openapi.yml",
        "patchSetId": 4
      },
      "lineNbr": 193,
      "author": {
        "id": 6841
      },
      "writtenOn": "2021-08-24T08:26:13Z",
      "side": 1,
      "message": "originally they used separate schemas. I changed this as per previous review comment to combine them.",
      "parentUuid": "e2616b8c_6ba32384",
      "range": {
        "startLine": 193,
        "startChar": 56,
        "endLine": 193,
        "endChar": 73
      },
      "revId": "b6c72bda01899986abe78cb537226e3c22a233f1",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b1566a0_78ba9340",
        "filename": "src/main/java/org/onap/cps/ncmp/dmi/rest/controller/DmiRestController.java",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 7680
      },
      "writtenOn": "2021-08-23T16:38:46Z",
      "side": 1,
      "message": "nb but important: We should add validation in the controller itself and pass actual object ( MediaType ) to service layer.",
      "range": {
        "startLine": 89,
        "startChar": 9,
        "endLine": 89,
        "endChar": 31
      },
      "revId": "b6c72bda01899986abe78cb537226e3c22a233f1",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b57581d_704338d3",
        "filename": "src/main/java/org/onap/cps/ncmp/dmi/rest/controller/DmiRestController.java",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 5006
      },
      "writtenOn": "2021-08-24T08:40:19Z",
      "side": 1,
      "message": "It might be possible that datatype is custom and not supported in Mediatype enum , how would that be handled?",
      "parentUuid": "5b1566a0_78ba9340",
      "range": {
        "startLine": 89,
        "startChar": 9,
        "endLine": 89,
        "endChar": 31
      },
      "revId": "b6c72bda01899986abe78cb537226e3c22a233f1",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26985060_c0f04a54",
        "filename": "src/test/groovy/org/onap/cps/ncmp/dmi/service/DmiServiceImplSpec.groovy",
        "patchSetId": 4
      },
      "lineNbr": 219,
      "author": {
        "id": 7680
      },
      "writtenOn": "2021-08-23T16:38:46Z",
      "side": 1,
      "message": "nb: We are not mocking with the input arguments and hence not validating that sdnc operation is called with correct input.",
      "range": {
        "startLine": 219,
        "startChar": 108,
        "endLine": 219,
        "endChar": 144
      },
      "revId": "b6c72bda01899986abe78cb537226e3c22a233f1",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "035b9f52_47d67f89",
        "filename": "src/test/groovy/org/onap/cps/ncmp/dmi/service/DmiServiceImplSpec.groovy",
        "patchSetId": 4
      },
      "lineNbr": 222,
      "author": {
        "id": 7680
      },
      "writtenOn": "2021-08-23T16:38:46Z",
      "side": 1,
      "message": "testing with the string but in the next test we are testing with Object.",
      "range": {
        "startLine": 222,
        "startChar": 65,
        "endLine": 222,
        "endChar": 77
      },
      "revId": "b6c72bda01899986abe78cb537226e3c22a233f1",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}